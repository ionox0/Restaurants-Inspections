3
ls()
x <- (1,2,3)
x <- c(1,2,3)
x
newfunc <- function(args){}
newfunc <- function(args){}
install.pacakges('ggplot2')
install.packges('ggplot2')
install.packages('ggplot2')
library('ggplot2')
install.packages('datasets')
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
beaver1
volcano
filled.contour(volcano)
anscombe
plot(anscombe)
plot(anscombe, type="l")
plot(anscombe, anscombe, type="l")
x <- (1,2,3)
x <- c(1,2,3)
y <- c(4,5,6)
plot(x,y)
plot(x,y, type='l')
install('histdata')
install.packages('histdata')
install.packages('HistData')
HistData
HistData::
install.packges('ggplot2')
ggplot2
HistData::
HistData::hist
HistData
OldMaps
data("WorldPhones")
data("WorldPhones")
data("JohnsonJohnson")
ggplot('JohnsonJohnson')
ggplot2('JohnsonJohnson')
plot('JohnsonJohnson')
plot('Pyx')
data('OldMaps')
data(OldMaps)
data(OldMaps)
data("HairEyeColor")
install.packages("magrittr")
library(ncdf4)
library(RNetCDF)
library(rworldmap)
gf <- read.csv(file="~/Documents/columbia 2016Spring/EDAV/project/EDAV_Project_2/GlobalFloodsRecord.csv", header=TRUE, sep=",")
flood.month.data = data.frame(Longitude=as.numeric(as.character(gf$Centroid.X)),Latitude=as.numeric(as.character(gf$Centroid.Y)),
Magnitude=as.numeric(gf$Magnitude..M...), month=format(as.Date(gf$Began,format='%d-%b-%y'),"%m"))
month=c("01","02","03","04","05","06","07","08","09","10","11","12")
for(i in 1:12){
flood.12.data <- subset(flood.month.data,month=="12")
world_map <- map_data("world")
p <- ggplot() + coord_fixed() +xlab("") + ylab("")
base_world <- p + geom_polygon(data=world_map, aes(x=long, y=lat, group=group),colour="white", fill="grey")+labs(title="World map Flood Magnitude(DEC)")
base_world
map_data <- base_world + geom_point(data=flood.12.data, aes(x=Longitude, y=Latitude,color=-Magnitude),size=2,alpha=I(0.6))
map_data
}
library(ncdf4)
library(RNetCDF)
library(rworldmap)
gf <- read.csv(file="~/Desktop/Columbia/EDAV/Project2/GlobalFloodsRecord.csv", header=TRUE, sep=",")
flood.month.data = data.frame(Longitude=as.numeric(as.character(gf$Centroid.X)),Latitude=as.numeric(as.character(gf$Centroid.Y)),
Magnitude=as.numeric(gf$Magnitude..M...), month=format(as.Date(gf$Began,format='%d-%b-%y'),"%m"))
month=c("01","02","03","04","05","06","07","08","09","10","11","12")
for(i in 1:12){
flood.12.data <- subset(flood.month.data,month=="12")
world_map <- map_data("world")
p <- ggplot() + coord_fixed() +xlab("") + ylab("")
base_world <- p + geom_polygon(data=world_map, aes(x=long, y=lat, group=group),colour="white", fill="grey")+labs(title="World map Flood Magnitude(DEC)")
base_world
map_data <- base_world + geom_point(data=flood.12.data, aes(x=Longitude, y=Latitude,color=-Magnitude),size=2,alpha=I(0.6))
map_data
}
library(ncdf4)
library(RNetCDF)
library(rworldmap)
gf <- read.csv(file="~/Desktop/Columbia/EDAV/Project2/GlobalFloodsRecord.csv", header=TRUE, sep=",")
flood.month.data = data.frame(Longitude=as.numeric(as.character(gf$Centroid.X)),Latitude=as.numeric(as.character(gf$Centroid.Y)),
Magnitude=as.numeric(gf$Magnitude..M...), month=format(as.Date(gf$Began,format='%d-%b-%y'),"%m"))
month=c("01","02","03","04","05","06","07","08","09","10","11","12")
for(i in 1:12){
flood.12.data <- subset(flood.month.data,month=="12")
world_map <- map_data("world")
p <- ggplot() + coord_fixed() +xlab("") + ylab("")
base_world <- p + geom_polygon(data=world_map, aes(x=long, y=lat, group=group),colour="white", fill="grey")+labs(title="World map Flood Magnitude(DEC)")
base_world
map_data <- base_world + geom_point(data=flood.12.data, aes(x=Longitude, y=Latitude,color=-Magnitude),size=2,alpha=I(0.6))
map_data
}
library(ncdf4)
library(RNetCDF)
library(rworldmap)
gf <- read.csv(file="~/Desktop/Columbia/EDAV/Project2/GlobalFloodsRecord.csv", header=TRUE, sep=",")
flood.month.data = data.frame(Longitude=as.numeric(as.character(gf$Centroid.X)),Latitude=as.numeric(as.character(gf$Centroid.Y)),
Magnitude=as.numeric(gf$Magnitude..M...), month=format(as.Date(gf$Began,format='%d-%b-%y'),"%m"))
month=c("01","02","03","04","05","06","07","08","09","10","11","12")
for(i in 1:12){
flood.12.data <- subset(flood.month.data,month=="12")
world_map <- map_data("world")
p <- ggplot() + coord_fixed() +xlab("") + ylab("")
base_world <- p + geom_polygon(data=world_map, aes(x=long, y=lat, group=group),colour="white", fill="grey")+labs(title="World map Flood Magnitude(DEC)")
base_world
map_data <- base_world + geom_point(data=flood.12.data, aes(x=Longitude, y=Latitude,color=-Magnitude),size=2,alpha=I(0.6))
map_data
}
library(ncdf4)
library(RNetCDF)
library(rworldmap)
gf <- read.csv(file="~/Desktop/Columbia/EDAV/Project2/GlobalFloodsRecord.csv", header=TRUE, sep=",")
flood.month.data = data.frame(Longitude=as.numeric(as.character(gf$Centroid.X)),Latitude=as.numeric(as.character(gf$Centroid.Y)),
Magnitude=as.numeric(gf$Magnitude..M...), month=format(as.Date(gf$Began,format='%d-%b-%y'),"%m"))
month=c("01","02","03","04","05","06","07","08","09","10","11","12")
for(i in 1:12){
flood.12.data <- subset(flood.month.data,month=="12")
world_map <- map_data("world")
p <- ggplot() + coord_fixed() +xlab("") + ylab("")
base_world <- p + geom_polygon(data=world_map, aes(x=long, y=lat, group=group),colour="white", fill="grey")+labs(title="World map Flood Magnitude(DEC)")
base_world
map_data <- base_world + geom_point(data=flood.12.data, aes(x=Longitude, y=Latitude,color=-Magnitude),size=2,alpha=I(0.6))
map_data
}
Ëšk
library(ncdf4)
library(RNetCDF)
library(rworldmap)
gf <- read.csv(file="~/Desktop/Columbia/EDAV/Project2/GlobalFloodsRecord.csv", header=TRUE, sep=",")
flood.month.data = data.frame(Longitude=as.numeric(as.character(gf$Centroid.X)),Latitude=as.numeric(as.character(gf$Centroid.Y)),
Magnitude=as.numeric(gf$Magnitude..M...), month=format(as.Date(gf$Began,format='%d-%b-%y'),"%m"))
month=c("01","02","03","04","05","06","07","08","09","10","11","12")
for(i in 1:12){
flood.12.data <- subset(flood.month.data,month=="12")
world_map <- map_data("world")
p <- ggplot() + coord_fixed() +xlab("") + ylab("")
base_world <- p + geom_polygon(data=world_map, aes(x=long, y=lat, group=group),colour="white", fill="grey")+labs(title="World map Flood Magnitude(DEC)")
base_world
map_data <- base_world + geom_point(data=flood.12.data, aes(x=Longitude, y=Latitude,color=-Magnitude),size=2,alpha=I(0.6))
map_data
}
install.packages('lubridate')
install.packages('data.table')
install.packages('tm')
install.packages('wordcloud')
install.packages('d3heatmap')
setwd('/Users/ianjohnson/Desktop/Columbia/EDAV/Project3')
data <- read.csv(file.choose(), header=T)
View(flood.12.data)
library(ggplot2)
library(ggmap)
world <- map_data("new york city")
world <- map_data("new york city")
USAMap = ggmap(get_googlemap(center=usa_center, scale=2, zoom=4), extent="normal")
usa_center = as.numeric(geocode("United States"))
usa_center = as.numeric(geocode("United States"))
USAMap = ggmap(get_googlemap(center=usa_center, scale=2, zoom=4), extent="normal")
addresses <- data$BUILDING, data$STREET
addresses <- [data$BUILDING, data$STREET]
address = data.frame(data$building, data$street)
address = data.frame(data$BUILDING, data$STREET)
write.csv(addresses)
write.csv(address)
setwd('/Users/ianjohnson/Desktop/Columbia/EDAV/Project3')
write.csv(address)
write.csv(address, file='addresses.csv')
write.csv(address, file='addresses.csv', row.names=FALSE, na="")
library(zipcode)
install.packages(zipcode)
install.packages('zipcode'')
install.packages('zipcode'')
install.packages('zipcode')
library(zipcode)
data(zipcode)
zipcode$region = substr(zipcode$zip, 1, 1)
g = ggplot(data=zipcode) + geom_point(aes(x=longitude, y=latitude, colour=region))
g = g + theme_bw() + scale_x_continuous(limits = c(-125,-66), breaks = NA)
g = g + scale_y_continuous(limits = c(25,50), breaks = NA)
plot(g)
g = g + theme_bw() + scale_x_continuous(limits = c(-125,-66), breaks = NA)
g = g + scale_y_continuous(limits = c(25,50), breaks = NULL)
plot(g)
library(zipcode)
library(ggplot2)
data(zipcode)
zipcode$region = substr(zipcode$zip, 1, 1)
g = ggplot(data=zipcode) + geom_point(aes(x=longitude, y=latitude, colour=region))
g = g + theme_bw() + scale_x_continuous(limits = c(-125,-66), breaks = NULL)
g = g + scale_y_continuous(limits = c(25,50), breaks = NULL)
g = g + labs(x=NULL, y=NULL)
plot(g0)
plot(g)
map('state', region = c('new york', 'new jersey', 'penn')) #
map('city', region = c('new york', 'new jersey', 'penn')) #
map <- get_googlemap('houston', markers = df, path = df, scale = 2)
map <- get_googlemap('new york city',  scale = 2)
plot(map)
map <- get_googlemap('houston', markers = df, path = df, scale = 3)
map <- get_googlemap('new york city',  scale = 3)
map <- get_googlemap('new york city',  scale = 1)
plot(map)
map <- get_googlemap('new york city',  scale = 2)
plot(map)
plot(map, xlim = c(-20, 59), ylim = c(35, 71), asp = 1)
plot(map)
qmap(map)
map <- get_googlemap('new york city',  scale = 2)
map <- get_googlemap('new york city',  scale = 2)
qmap(map)
columbia <- "Columbia university in the city of new york"
qmap(columbia, zoom = 14)
columbia <- "new york city"
qmap(columbia, zoom = 14)
columbia <- "new york city"
qmap(columbia, zoom = 20)
columbia <- "new york city"
qmap(columbia, zoom = 10)
columbia <- "new york city"
qmap(columbia, zoom = 12)
columbia <- "manhattan"
qmap(columbia, zoom = 12)
data$city = 'New York City'
data$state = 'New York'
data$zip = data$ZIPCODE
View(data)
data$Address = data$BUILDING + data$STREET
data$Address <- paste(data$BUILDING, data$STREET, sep="")
data$Address <- paste(data$BUILDING, data$STREET, sep=" ")
View(data)
write.csv(address)
write.csv(address, file='address.csv')
write.csv(data, file='address.csv')
latestData = data[which(  as.Date(as.Character(data$GRADE.DATE), '%d/%m/%Y') >= as.Date('2015-01-01')   )]
latestData = data[which(  as.Date(as.character(data$GRADE.DATE), '%d/%m/%Y') >= as.Date('2015-01-01')   )]
latestData = data[which(  as.Date(as.character(data$GRADE.DATE), '%d/%m/%Y') >= as.Date('2015-01-01')   )]
data$dateConverted = as.Date(as.character(data$GRADE.DATE), '%d/%m/%Y')
View(data)
latestData = subset(data, dateConverted > as.Date('2015-01-01'))
View(latestData)
View(latestData)
a <- c(rep("A", 3), rep("B", 3), rep("C",2))
b <- c(1,1,2,4,1,1,2,2)
df <-data.frame(a,b)
View(df)
df[!duplicated(df[,1]),]
latestData[!duplicated(latestData$DBA)]
latestData[!duplicated(latestData[2])]
latestData[!duplicated(latestData[,2])]
latestData[!duplicated(latestData[,2]),]
dedupeLatestData = latestData[!duplicated(latestData[,2]),]
View(dedupeLatestData)
numRestaurants = nrow(dedupeLatestData)
numRestaurants
View(latestData)
numRats =
l
library(plyr)
count(latestData, "VIOLATION.CODE")
count(latestData, "VIOLATION.CODE")
violationCounts = count(latestData, "VIOLATION.CODE")
verminCounts = violationCounts[(violationCounts$VIOLATION.CODE == "04K" |
violationCounts$VIOLATION.CODE == "04L" |
violationCounts$VIOLATION.CODE == "04M" |
violationCounts$VIOLATION.CODE == "04N" ), ]
View(verminCounts)
violationCounts[(violationCounts$VIOLATION.CODE == "04K" |
+                                     violationCounts$VIOLATION.CODE == "04L" |
+                                     violationCounts$VIOLATION.CODE == "04M" |
+                                     violationCounts$VIOLATION.CODE == "04N" ), ]
violationCounts = count(latestData, "VIOLATION.CODE")
violationCounts[(violationCounts$VIOLATION.CODE == "04K" |
violationCounts$VIOLATION.CODE == "04L" |
violationCounts$VIOLATION.CODE == "04M" |
violationCounts$VIOLATION.CODE == "04N" ), ]
hist(verminCounts)
verminHist = c(numRestaurants/verminCounts[1], numRestaurants/verminCounts[2])
hist(verminCounts)
verminHist = c(numRestaurants/verminCounts[1], numRestaurants/verminCounts[2])
hist(verminHist)
View(verminCounts)
verminHist = c(numRestaurants/verminCounts[1,2], numRestaurants/verminCounts[2,2])
hist(verminHist)
verminHist = cverminCounts[1,2]/(numRestaurants, verminCounts[2,2]/numRestaurants)
verminHist = c(verminCounts[1,2]/numRestaurants, verminCounts[2,2]/numRestaurants)
hist(verminHist)
verminHist = c(verminCounts[1,2]/numRestaurants,
verminCounts[2,2]/numRestaurants,
verminCounts[3,2]/numRestaurants,
verminCounts[4,2]/numRestaurants)
hist(verminHist)
verminHist
verminHist = c(verminCounts[1,2],
verminCounts[2,2],
verminCounts[3,2],
verminCounts[4,2])
hist(verminHist)
verminHist = c(verminCounts[1,2],
verminCounts[2,2],
verminCounts[3,2],
verminCounts[4,2])
xlab = c('Rats', 'Mice', 'Roaches', 'Flies')
barplot(verminHist, xlab, ylab='Count', xlab='Vermin')
barplot(verminHist, names.arg=xlab, ylab='Count', xlab='Vermin')
barplot(verminHist, names.arg=xlab, ylim=c(0,5), ylab='Count', xlab='Vermin')
barplot(verminHist, names.arg=xlab, ylim=c(0,500), ylab='Count', xlab='Vermin')
barplot(verminHist, names.arg=xlab, ylim=c(0,10000), ylab='Count', xlab='Vermin')
barplot(verminHist, names.arg=xlab, ylim=c(0,2500), ylab='Count', xlab='Vermin')
View(address)
View(data)
